script {
                    try {
                        // Check if any process is using port 5000 and kill it
                        def usedPort = sh(script: "lsof -i :${DOCKER_PORT} -t || true", returnStdout: true).trim()
                        if (usedPort) {
                            echo "Port ${DOCKER_PORT} is in use by process ${usedPort}, killing it..."
                            sh "kill -9 ${usedPort} || true"
                        } else {
                            echo "Port ${DOCKER_PORT} is free."
                        }

                        // Check if any running container is using port 5000 and stop it
                        def containerUsingPort = sh(script: "docker ps --filter 'publish=${DOCKER_PORT}' -q || true", returnStdout: true).trim()
                        if (containerUsingPort) {
                            echo "Docker container ${containerUsingPort} is using port ${DOCKER_PORT}, stopping it..."
                            sh "docker stop ${containerUsingPort} || true"
                            sh "docker rm ${containerUsingPort} || true"
                        }

                        // Stop and remove existing containers with docker-compose down
                        echo "Bringing down existing containers..."
                        sh "docker-compose down || true"

                        // Deploy using docker-compose
                        echo "Deploying with docker-compose..."
                        sh "docker-compose up -d --build"

                    } catch (Exception e) {
                        echo "Error during deployment: ${e.getMessage()}"
                        currentBuild.result = 'FAILURE'
                        error("Deployment failed!")
                    }
                }